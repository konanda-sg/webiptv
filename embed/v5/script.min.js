document.addEventListener("DOMContentLoaded", function () {
  const currentLocation = window.location.search;
  let secureMe = atob("aHR0cHM6Ly9jb3JzLXByb3h5LmNvb2tzLmZ5aQ==");
  let needHttps = atob("aHR0cHM6Ly9hbnl3aGVyZS5wd2lzZXR0aG9uLmNvbQ==");
  
  function getSecureUrl(url, corsProxy = needHttps ) {
  try {
    const parsed = new URL(url);
    if (parsed.protocol === "https:") {
      return url;
    } else if (parsed.protocol === "http:") {
     
      const proxy = corsProxy.endsWith("/") ? corsProxy : corsProxy + "/";
      return proxy + url;
    }
    // If not http or https, return as is or handle as needed
    return url;
  } catch (e) {
    // Invalid URL
    return url;
  }
}
  const sURL = currentLocation.replace("?live&url=", ""); 
  const vLink = getSecureUrl(sURL);  
  
  var flvPlayer = null;
  var tsPlayer = null;
  var hlsPlayer = null;
  var dashPlayer = null;

  var stopPlayers = function () {
    if (flvPlayer) {
      flvPlayer.destroy();
      flvPlayer = null;
    }

    if (tsPlayer) {
      tsPlayer.destroy();
      tsPlayer = null;
    }
    if (hlsPlayer) {
      hlsPlayer.destroy();
      hlsPlayer = null;
    }
    if (dashPlayer) {
      dashPlayer.destroy();
      dashPlayer = null;
    }
  };

  var hide_for_error = function () {
    $("#player").hide();

    stopPlayers();
  };

  var show_for_ok = function () {
    $("#player").show();
  };

  // Use H5 native to play mp4.
  if (vLink.indexOf(".mp4") > 0) {
    $("#player").attr("src", vLink).show;
    return;
  }

  // Start play HTTP-TS.
  //if (r.indexOf("ts") > 0) {
  if (!mpegts.getFeatureList().mseLivePlayback) {
    hide_for_error();
    return;
  }

  show_for_ok();

  tsPlayer = mpegts.createPlayer({
    type: "mpegts",
    url: vLink,
    isLive: true,
    enableStashBuffer: false
  });
  tsPlayer.attachMediaElement(document.getElementById("player"));
  tsPlayer.load();
  tsPlayer.play();
  //return;
  //}

  // Start play HLS.
  if (vLink.indexOf(".m3u8") > 0) {
    if (!Hls.isSupported()) {
      hide_for_error();
      return;
    }

    show_for_ok();

    hlsPlayer = new Hls();
    hlsPlayer.loadSource(vLink);
    hlsPlayer.attachMedia(document.getElementById("player"));
    return;
  }

  // Start play MPEG-DASH.
  if (vLink.indexOf(".mpd") > 0) {
    show_for_ok();

    dashPlayer = dashjs.MediaPlayer().create();
    dashPlayer.initialize(document.querySelector("#player"), vLink, true);
    return;
  }

  // Start play HTTP-FLV.
  let isFlv = vLink.indexOf(".flv") > 0;

  isFlv = isFlv || (vLink.url && vLink.url.indexOf("http") === 0);
  if (isFlv) {
    if (!mpegts.getFeatureList().mseLivePlayback) {
      hide_for_error();
      return;
    }

    show_for_ok();

    flvPlayer = mpegts.createPlayer({
      type: "flv",
      url: vLink,
      isLive: true,
      enableStashBuffer: false
    });

    flvPlayer.attachMediaElement(document.getElementById("player"));
    flvPlayer.load();
    flvPlayer.play();
    return;
  }
});
